const express = require('express');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
const User = require('../models/User');

const router = express.Router();

// KAYIT
router.post('/register', async (req, res) => {
  const { name, email, password } = req.body;

  try {
    // Zaten kayıtlı mı?
    const existing = await User.findOne({ email });
    if (existing) {
      return res.status(400).json({ message: 'Bu e-posta zaten kayıtlı' });
    }

    // Şifreyi hash’le
    const hashedPassword = await bcrypt.hash(password, 10);

    // Yeni kullanıcı oluştur
    const newUser = new User({ name, email, password: hashedPassword });
    await newUser.save();

    res.status(201).json({ message: 'Kayıt başarılı' });
  } catch (err) {
    res.status(500).json({ error: 'Sunucu hatası' });
  }
});

// GİRİŞ
router.post('/login', async (req, res) => {
  const { email, password } = req.body;

  try {
    // Kullanıcıyı bul
    const user = await User.findOne({ email });
    if (!user) return res.status(401).json({ message: 'Kullanıcı bulunamadı' });

    // Şifreyi karşılaştır
    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) return res.status(401).json({ message: 'Hatalı şifre' });

    // Token oluştur
    const token = jwt.sign({ userId: user._id }, 'secret-key', { expiresIn: '7d' });

    res.json({ token, name: user.name });
  } catch (err) {
    res.status(500).json({ error: 'Sunucu hatası' });
  }
});

module.exports = router;